Revision: 11e48cf5d0b5ae6861dcb5f71d8acb4a0530f023
Patch-set: 2
File: /COMMIT_MSG

13
Thu Aug 16 03:57:02 2012 +0000
Author: Todd Poynor <1004277@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAIfH///+M=
Bytes: 139
Gerrit matched this up with the previous change assigned ID I76b40ac1b7ce69114773c5c2c414478c8e35d6d7, so it's more complicated than I knew

File: drivers/usb/gadget/f_audio_source.c

827
Thu Aug 16 03:57:02 2012 +0000
Author: Todd Poynor <1004277@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAIfH///+Q=
Bytes: 72
assuming this runs before audio_source_bind_config could be first called

827
Thu Aug 16 15:11:46 2012 +0000
Author: Mike Lockwood <1004957@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAIfH///+Q=
UUID: AAAIf3///z8=
Bytes: 151
Yeah it will. This gets called at kernel init, and audio_source_bind_config isn't called until USB is connected with the audio_source function enabled.

827
Thu Aug 16 18:28:57 2012 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAIfn///tA=
Bytes: 485
why do you need this to be done at runtime? Since it's static and only initialized once, just define it directly right before bind_config:

static struct audio_dev _audio_dev = {
  .func = {
       .name = "audio_source",
       .bind = audio_bind,
       .unbind = audio_unbind,
       .set_alt = audio_set_alt,
       .setup = audio_setup,
       .disable = audio_disable,
   },
  .lock = __SPIN_LOCK_UNLOCKED(_audio_dev.lock),
  .idle_reqs = LIST_HEAD_INIT(_audio_dev.idle_reqs),
};

