Revision: f08d1bc70593f8c18c9b8da238ad207855f17967
Patch-set: 1
File: /COMMIT_MSG

14:13-14:33
Tue May 13 01:18:03 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a698874_0a0d3b53
Bytes: 166
/dev/ is under control of userspace, if this is really necessary (and I don't think it is) it should be implemented in ueventd, which is what creates the /dev/ nodes.

14:13-14:33
Tue May 13 04:58:06 2014 +0000
Author: Aniroop Mathur <1043015@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2a698874_0a0d3b53
UUID: 8a6a7464_9940a71a
Bytes: 1006
Thank you for you reply !!

1. I wanted to refer to /dev/input/event_proximity and not /dev/event_proximity. Sorry for mistyping.

2. As I checked code /core/init/devices.c, there are about seven parameters to create /dev/input/<event> nodes namely, "Action", "Devpath", "Subsystem", "Firmware", "Major", "Minor", "Partn", "Partname", "Devname".
All these parameters are set by kernel input susbsytem during input_register_call and userspace (devices.c) just use these paramaters to create /dev/input/<event,so userspace is really not able to control it.
For example:
Major = 13 - fixed by kernel input subsytem for all input devices
Minor = X - this number x is also set by kernel as per boot up sequence, and so userspace does not really know whether this minor is for proximity or accelerometer device ?
Devname = /input/event<x> - again, as you know, this x is dependent on minor.
So, if we wanted to set name using userspace, we cannot do it because we are not able to identify the device in interest.

14:13-14:33
Wed May 14 03:04:18 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8a6a7464_9940a71a
UUID: 2aeee834_e8f30284
Bytes: 210
devpath is probably enough to associate the device with a specific driver, but I still don't see the point.  HALs that don't want to search can probably also find the correct event node through /sys/bus/i2c/...

18:33-18:53
Tue May 13 01:18:03 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4a64fc99_ab967534
Bytes: 94
that is often not true, we support many of these devices over USB as well as the built in one.

18:33-18:53
Tue May 13 05:00:56 2014 +0000
Author: Aniroop Mathur <1043015@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4a64fc99_ab967534
UUID: 8a6a7464_d9b93fdd
Bytes: 383
Actually, i am referring to input devices and not usb type of devices.
So, I think there is only input device of one type.
Also, as i have already mentioned in the commit:
Even in future, if there are two accelerometer as an example, then developer can still use the old method of using random input number or instead can set accel_bosch and accel_mpu or at last accel_1 and accel_2.

18:33-18:53
Wed May 14 03:04:18 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8a6a7464_d9b93fdd
UUID: caaaaceb_cc960f36
Bytes: 153
Input devices can be connected over USB, either inside the device (that's how its done on most x86 laptops), or added later by the user with an OTG port.

32:14-32:23
Tue May 13 01:18:03 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a698874_6732f22e
Bytes: 93
Who do you mean by developer?  Application developers should not be opening devices directly.

32:14-32:23
Tue May 13 05:00:56 2014 +0000
Author: Aniroop Mathur <1043015@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2a698874_6732f22e
UUID: 4a64fc99_710e2ac3
Bytes: 187
Yes, application developers and specifically HAL developers because HAL interacts with kernel.
Sorry, Can you please explain or elaborate why application should not open device directly ?

32:14-32:23
Wed May 14 03:04:18 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4a64fc99_710e2ac3
UUID: 2aeee834_0803c6a5
Bytes: 269
Application developers must not open devices directly, they must use framework APIs, otherwise they are not portable.  HALs generally open the files once on startup, so the burden of searching doesn't matter.  Also, as above, they can find the exact name through sysfs.

38:51-38:74
Tue May 13 01:18:03 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8a6a7464_33643a5b
Bytes: 121
The scan is more flexible and not very difficult, I don't think this is a justification for adding shortcut device nodes.

38:51-38:74
Tue May 13 05:00:56 2014 +0000
Author: Aniroop Mathur <1043015@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8a6a7464_33643a5b
UUID: 2a698874_edf24150
Bytes: 186
Yes, scan is flexible but as you know, scan takes some computation time, which will be removed after using names which are logical, fast and easy for debugging as mentioned in my commit.

