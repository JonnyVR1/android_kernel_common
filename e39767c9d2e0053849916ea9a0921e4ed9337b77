Revision: e39767c9d2e0053849916ea9a0921e4ed9337b77
Patch-set: 4
File: drivers/base/power/common.c

17:0-17:1
Wed Jun 22 18:18:25 2016 +0000
Author: Dmitry Shmidt <1000414@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4e67020f_f8d4c61c
Bytes: 36
Same thing from Todd - is it needed?

17:0-17:1
Wed Jun 22 18:26:12 2016 +0000
Author: John Stultz <1010110@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4e67020f_f8d4c61c
UUID: 2e564e46_66acc0a1
Bytes: 158
It was needed in the upstream commit which added a device_pm_check_callbacks call to dev_pm_domain_set which doesn't exist here.

I can remove it to simplify.

File: drivers/base/power/domain.c

23
Wed Jun 22 18:12:44 2016 +0000
Author: Todd Kjos <1069543@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6ed5a6ce_6baa3da2
Bytes: 15
is this needed?

23
Wed Jun 22 18:26:12 2016 +0000
Author: John Stultz <1010110@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6ed5a6ce_6baa3da2
UUID: 8ed2dae5_f92a8823
Bytes: 99
Seems like we could go without it, but its part of the upstream commit. I can drop it if preferred.

File: drivers/base/power/main.c

1579
Wed Jun 22 18:12:44 2016 +0000
Author: Todd Kjos <1069543@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6ed5a6ce_4bc09959
Bytes: 162
Is this the only place where no_pm_callbacks is consumed? Any reason why the checks in device_pm_check_callbacks() can't be done here and eliminate this bitfield?

1579
Wed Jun 22 18:26:12 2016 +0000
Author: John Stultz <1010110@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6ed5a6ce_4bc09959
UUID: 2e564e46_0b5a2ddc
Bytes: 157
So this sounds reasonable, but as this is a backport of an upstream commit, I'd prefer to keep it close to upstream.

+Ulf: Do you have any thoughts on this?

1579
Wed Jun 22 18:30:11 2016 +0000
Author: Todd Kjos <1069543@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6ed5a6ce_4bc09959
UUID: 0ec6ea30_83b2ecfc
Bytes: 279
Hmm. Looking closer, all of this is just to skip these conditionals below. In the empty case, we will just fall out the bottom of the if/else with callback==NULL and end up and the unlock label.

So just avoiding the memory latency for these conditionals is what fixes the issue?

1579
Wed Jun 22 20:48:01 2016 +0000
Author: John Stultz <1010110@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0ec6ea30_83b2ecfc
UUID: 2e680e70_c7fe3e72
Bytes: 205
Sorry (I submitted a new version before noticing this comment). This is a bit confusing. Let me follow up with Ulf to make sure I better understand the core reason this fixes the problem and I'll resubmit.

1579
Wed Jun 22 21:19:51 2016 +0000
Author: John Stultz <1010110@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0ec6ea30_83b2ecfc
UUID: 8e09fadf_9a3e0dd0
Bytes: 206
Ok.. So the subtle detail here is that ret = 1, which sets direct_complete which wasn't done previously. This allows the problematic i2c driver to properly suspend w/o causing clk disable/enable mismatches.

1579
Wed Jun 22 21:45:43 2016 +0000
Author: Todd Kjos <1069543@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8e09fadf_9a3e0dd0
UUID: 2eed6e38_42c1343c
Bytes: 498
Ok, then it still seems like we don't need dev->power.no_pm_callbacks or any of the calls to device_pm_check_callbacks except one right here. The code would then be:

  if (!device_pm_check_callbacks()) {
    ret = 1;
    goto unlock;
  }

and none of the changes in the other files are needed.

Having to sprinkle device_pm_check_callbacks() invocations throughout the code to get this set up correctly seems error prone, and if its side effects are only used here, then why not only call it here?

