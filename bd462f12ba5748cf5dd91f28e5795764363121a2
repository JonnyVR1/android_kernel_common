Revision: bd462f12ba5748cf5dd91f28e5795764363121a2
Patch-set: 1
File: security/selinux/include/avc.h

164
Mon Jun 01 13:36:27 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_a32e4537
Bytes: 325
1. Not sure about splitting it up into two u8 arguments; we're already violating davem's maxim: "If you write interfaces with more than 4 or 5 function arguments, it's possible that you and I cannot be friends.ï»¿".
2. Not sure about naming it "token".  Maybe "subsystem" or "driver" or anything at all that would be clearer.

164
Mon Jun 01 14:37:44 2015 +0000
Author: Jeffrey Vander Stoep <1054468@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_a32e4537
UUID: b91fb853_1274d445
Bytes: 256
1) what I like about splitting them up is that is how they are always used.
2) Agreed. I like "driver" but that seems very ioctl specific. If netfilter were to use this and required more than 256 bits of permissions, what would be a good generic specifier?

164
Mon Jun 01 15:32:35 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b91fb853_1274d445
UUID: 6d42d931_9e0b5c25
Bytes: 1272
Not sure as we haven't truly thought this through for netlink. We presently have hardcoded tables in security/selinux/nlmsgtab.c that map u16 nlmsg_type values for some netlink protocols to a small number of discrete nlmsg_* permissions, so that would be a candidate for conversion to using these extended permissions.  But nlmsg_type is a single u16 field of the nlmsghdr with no internal encoding and the defined values are typically just enumerations and usually seem to fit in a u8 (e.g. include/uapi/linux/rtnetlink.h RTM_MAX), so token/subsystem/driver might end up unused there in practice until/unless someone has more than that many nlmsg_type values for a given netlink protocol.  Unless we chose to encode the netlink protocol itself as the driver/subsystem and then
the nlmsg_type as the perm, and stop trying to map each netlink protocol to its own class (although I did just upstream a patch to update the SELinux netlink classes to match the current set of netlink protocols).
Further, we haven't really considered how to properly control NETLINK_GENERIC or NETLINK_CONNECTOR where it is simply a generic transport for communication and it is not at all clear how to map the nlmsg_type or even protocol-specific information like the genlmsghdr u8 cmd value.

164
Mon Jun 01 16:10:27 2015 +0000
Author: Jeffrey Vander Stoep <1054468@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_9e0b5c25
UUID: 0d54fde2_afa299a7
Bytes: 140
I'll go with "driver" for now. If/when netlink needs this field it might make sense to create a union so that the variable names make sense.

File: security/selinux/include/security.h

126
Mon Jun 01 13:36:27 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_439be1ee
Bytes: 264
This list is only used by the AVC, not by the security server, and therefore belongs in an AVC-private data structure that wraps the structure returned by the security server.  In the old version of the ptach, this was in the avc_operation_decision_node structure?

126
Mon Jun 01 14:37:44 2015 +0000
Author: Jeffrey Vander Stoep <1054468@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_439be1ee
UUID: b91fb853_52c00cbe
Bytes: 30
It made for MUCH cleaner code.

126
Mon Jun 01 15:32:35 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b91fb853_52c00cbe
UUID: d9fb8c32_9bb7e428
Bytes: 291
Can you point to an example (before and after)?
I don't quite see it, and the field is never used outside of avc.c.  Its presence in an out argument of the security server suggests that the security server is returning a list to the caller, which is not true and would be problematic anyway.

132
Mon Jun 01 13:36:27 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9fb8c32_883f98e8
Bytes: 47
Ditto, was in the avc_operation_node structure?

File: security/selinux/ss/avtab.c

470
Mon Jun 01 13:48:49 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_a34ac5af
Bytes: 151
Let's change this to match the logic in libsepol i.e. treat it as an error if (vers < POLICYDB_VERSION_XPERMS_IOCTL) && (key.specified & AVTAB_XPERMS).

File: security/selinux/ss/avtab.h

59
Mon Jun 01 13:36:27 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_03a1d91e
Bytes: 248
Names don't really convey the meaning clearly.  Can we use IOCTLNUM and IOCTLTYPE here unambiguously since it is specific to ioctls?  Or perhaps IOCTLDRIVER and IOCTLCMD?  Or IOCTLDRIVER and IOCTLFUNC?  Anything that would be clearer than SEQ/CODE.

59
Mon Jun 01 14:37:44 2015 +0000
Author: Jeffrey Vander Stoep <1054468@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_03a1d91e
UUID: ed56c9ec_c376c854
Bytes: 50
IOCTLDRIVER and IOCTLFUNC sound good to me. Thanks

