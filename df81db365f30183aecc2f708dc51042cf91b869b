Revision: df81db365f30183aecc2f708dc51042cf91b869b
Patch-set: 2
File: drivers/md/dm-verity.c

463:0-465:20
Mon Sep 28 21:24:31 2015 +0000
Author: Jeffrey Vander Stoep <1054468@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ee616dea_57da4ea9
Bytes: 167
This is usually frowned upon...although I see it scattered all over in /drivers/md

https://www.kernel.org/doc/Documentation/CodingStyle

See below for an alternative.

463:0-465:20
Tue Sep 29 12:50:05 2015 +0000
Author: Sami Tolvanen <1058768@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee616dea_57da4ea9
UUID: ceae6993_e1cb7c31
Bytes: 52
Good point. The typedef is not really needed anyway.

474:9-474:38
Mon Sep 28 21:24:31 2015 +0000
Author: Jeffrey Vander Stoep <1054468@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ee616dea_976566a9
Bytes: 89
int (*verity_bv_block_func) (dm_verity *v, struct dm_verity_io *io, u8 *data, size_t len)

474:9-474:38
Tue Sep 29 12:50:05 2015 +0000
Author: Sami Tolvanen <1058768@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee616dea_976566a9
UUID: 6ec3bd5a_b8bb7545
Bytes: 4
Done

781:16-781:23
Thu Nov 05 00:40:07 2015 +0000
Author: Will Drewry <1022354@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8df777d_22bceeea
Bytes: 109
why use vzalloc here instead of kzalloc?  Is there a specific fear that kzalloc is going to fail to allocate?

781:16-781:23
Thu Nov 05 01:27:43 2015 +0000
Author: Sami Tolvanen <1058768@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f8df777d_22bceeea
UUID: b69d1e72_b7fff01b
Bytes: 172
It's because the buffer can be relatively large, up to 1 MiB using the default error correction parameters. I could try kzalloc and fall back to vzalloc if it fails though.

781:16-781:23
Thu Nov 05 16:06:20 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b69d1e72_b7fff01b
UUID: 568ea242_5de34758
Bytes: 239
As this is part of initialization, I would accept the slowness of vzalloc dealing with a large allocation of scattered blocks, rather than have this possibly consume a precious contiguous block of very high ranking away from other systems.

781:16-781:23
Mon Nov 09 22:02:20 2015 +0000
Author: Sami Tolvanen <1058768@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 568ea242_5de34758
UUID: b6b19e59_518c7457
Bytes: 616
Upstream had some concerns about this. They recommend against allocating memory during IO, because that might lead to failures in face of low memory.

I explained how preallocating the buffers for each IO operation would be wasteful considering the buffers can be large and they are only needed if there are errors. The recommendation was to punt error correcting work to a worker thread and use a mempool to allocate memory there.

Any thoughts on this? I think the worker thread approach sounds reasonable, but I also don't think it's a huge problem if we fail to correct an error when the device is out of memory.

781:16-781:23
Mon Nov 09 22:33:46 2015 +0000
Author: Jeffrey Vander Stoep <1054468@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b6b19e59_518c7457
UUID: 16c50ace_a4ec82eb
Bytes: 174
does mempool mean kmem_cache? It seems wasteful to be hording memory on a device that is low on it for functionality that may never be used during the lifetime of the device.

