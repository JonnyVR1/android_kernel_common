Revision: 5023553857812108cbf3fd0790b3044192c58e83
Patch-set: 2
File: drivers/usb/gadget/f_mtp.c

632
Tue Nov 09 22:02:50 2010 +0000
Author: Todd Poynor <1004277@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA8n///20=
Bytes: 203
Still not sure why locking would be required here, have already ensured a single send_file/receive_file request is sent at a time, and there doesn't seem to be any other potential concurrent lock holder.

679
Tue Nov 09 22:02:50 2010 +0000
Author: Todd Poynor <1004277@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA8n///2s=
Bytes: 124
Unclear why this single read needs mutual exclusion... if there were optimizer code motion issues maybe a barrier() instead?

679
Tue Nov 09 22:23:09 2010 +0000
Author: Mike Lockwood <1000830@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA8n///2s=
UUID: AAAA8n///0o=
Bytes: 116
I'm doing this to avoid problems with SMP.  There could be a lighter weight way to do that, but this shouldn't hurt.

798
Tue Nov 09 22:02:50 2010 +0000
Author: Todd Poynor <1004277@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA8n///2k=
Bytes: 128
Sounds like there's never supposed to be concurrent ioctl requests, could WARN_ON() here if there's potential bugs to be caught?

798
Tue Nov 09 22:23:09 2010 +0000
Author: Mike Lockwood <1000830@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA8n///2k=
UUID: AAAA8n///0k=
Bytes: 169
If there are concurrent ioctls, that would be a bug in userspace which should catch and report the EBUSY, so I don't think we need to output a warning to the kernel log.

848
Tue Nov 09 22:02:50 2010 +0000
Author: Todd Poynor <1004277@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA8n///2E=
Bytes: 138
Didn't understand why this is necessary.  ioctl code is running in kernel context, doesn't seem like there should be address space issues?

848
Tue Nov 09 22:23:09 2010 +0000
Author: Mike Lockwood <1000830@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA8n///2E=
UUID: AAAA8n///0g=
Bytes: 236
If we call vfs_read and vfs_write from the ioctl caller's thread, they will attempt to use the userspace address space for its buffers instead of the kernel buffers.  Moving the file transfer to a real kernel thread solves that problem.

853
Tue Nov 09 22:02:50 2010 +0000
Author: Todd Poynor <1004277@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA8n///1k=
Bytes: 140
It seems like dev->xfer_result must be consistent with the request that was just processed (since the ioctl exclusion lock is held), needed?

853
Tue Nov 09 22:23:09 2010 +0000
Author: Mike Lockwood <1000830@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA8n///1k=
UUID: AAAA8n///0c=
Bytes: 168
Right.  The only reason we need this is to make sure we don't have SMP related memory read/write problems.  If you know a better way to handle this that would be great.

