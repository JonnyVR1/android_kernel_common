Revision: d3b18da23e9c3f3fd2c20377dca3da17c030fc70
Patch-set: 1
File: kernel/sched/sched.h

1523:15-1523:31
Wed Aug 24 15:10:18 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 881e5bf2_d4c5945d
Bytes: 48
Q: what makes sure walt_ravg_window is not zero?

1523:15-1523:31
Wed Aug 24 15:41:12 2016 +0000
Author: Todd Kjos <1069543@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 881e5bf2_d4c5945d
UUID: 881e5bf2_4fdd6d06
Bytes: 218
It is hardcoded to 20000000 and can only be changed via the kernel command line. If someone did set it to 0 (or anything less than MIN_SCHED_RAVG_WINDOWS), then walt_disabled gets set to true and we wouldn't come here.

1523:15-1523:31
Wed Aug 24 15:42:37 2016 +0000
Author: Amit Pundir <1031448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 881e5bf2_d4c5945d
UUID: e8c6f768_35d13029
Bytes: 494
walt_ravg_window==20000000 but because of early_param(), it can be override from kernel commandline.

In early_param func, walt_disabled==1 for out of range values of walt_ravg_window. 

So in this particular case !walt_disabled will take care of that.

I did not check other division instances. Though I do see a couple more division by walt_ravg_window without explicitly checking for walt_disabled but there might be other relevant divide-by-zero checks which I might have easily overlooked.

File: kernel/sched/walt.c

25:9-25:39
Wed Aug 24 18:01:07 2016 +0000
Author: John Stultz <1010110@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e85c37da_0baea17b
Bytes: 114
Can you split this change into a separate patch? It really doesn't seem to have much to do with the do_div change.

