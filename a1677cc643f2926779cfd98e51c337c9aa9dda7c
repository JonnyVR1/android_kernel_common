Revision: a1677cc643f2926779cfd98e51c337c9aa9dda7c
Patch-set: 8
File: drivers/misc/iface_stat.c

287
Fri Mar 18 18:27:15 2011 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA/X///bM=
Bytes: 1395
I don't see why you need these TCP/UDP/TX/RX enums since the caller always has all the information that it passes as arguments. It would be much cleaner if you did something like this at the very least:

struct traff_stat {
    unsigned long packets;
    unsigned long bytes;
};

struct uid_stat {
    struct traff_stat tcp_rx;
    struct traff_stat tcp_tx;
    struct traff_stat udp_rx;
    struct traff_stat udp_tx;
    ...
};

You can also go a little further and do something like:

struct proto_stat {
   struct traff_stat rx;
   struct traff_stat tx;
};

struct uid_stat {
   struct proto_stat tcp;
   struct proto_stat udp;
};

Then this function would just take a struct traff_stat * and an int as argument. With current design though, it would not  actually work because you have that work you schedule and you need these parameters. But, to be honest, I don't actually understand WHY you schedule away that work. In the time sensitive part you *already* walk the interface list and the uid list, so you already *know* that it does not exist. You then allocate memory for the work and schedule away to do the same list walks again. Why can't you just allocate the uid_stat struct right there and then and insert it into the list? This will get rid of these races, get rid of the scheduling, simplify a bunch of the stuff and make the code cleaner in the process. Am I missing something?

427
Fri Mar 18 18:27:15 2011 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA/X///fg=
Bytes: 12
remove void*

568
Fri Mar 18 18:27:15 2011 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA/X///fc=
Bytes: 20
remove all the void*

