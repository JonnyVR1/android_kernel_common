Revision: 7c47bcd7764e609c3a2bab1fc1b0f48199f55bce
Patch-set: 4
File: fs/pstore/pmsg.c

35:54-35:71
Tue Aug 30 23:22:21 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 11fd3d27_3ee0c98a
Bytes: 190
over the shoulder review: do not throw away __user tag, and then reinstate it later several layers down. Some arches may even have troubles with this because of the memory segment registers.

35:54-35:71
Wed Aug 31 01:21:50 2016 +0000
Author: Greg Hackmann <1015340@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 11fd3d27_3ee0c98a
UUID: 11b0ddbd_acdcc732
Bytes: 714
__user itself doesn't have any effect at runtime.  It's ifdef-ed to nothing on a normal kernel build.

It's intended for documentation and static analyzers, because it's very important that all userspace memory accesses from the kernel are properly checked.  (Enough so that some architectures have *other* ways of enforcing that userspace accesses go through the uaccess helpers.)

So I'm worried by any change that gets rid that documentation, even temporarily.  I can imagine after enough time passing, someone might not be aware that the fifth parameter to write_buf is *sometimes* an unchecked userspace pointer (depending on the contents of a different parameter) and ends up using it in a dangerous context.

File: include/linux/pstore.h

48:0-50:31
Tue Aug 30 23:12:03 2016 +0000
Author: Todd Kjos <1069543@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 11c7fd2d_6effaf51
Bytes: 227
PSTORE_FROM_KERNEL isn't really a flag. How about something like:

  #define PSTORE_FROM_ID 0x02
  #define IS_PSTORE_FROM_USER(_flag) (_flag & PSTORE_FROM_ID)
  #define IS_PSTORE_FROM_KERNEL(_flag) (!IS_PSTORE_FROM_USER(_flag))

