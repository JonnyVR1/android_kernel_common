Revision: 6f5d7d8d94d67686a77f86f368f79383ad16ca89
Patch-set: 2
File: net/ipv4/tcp.c

3320
Fri Apr 04 02:54:57 2014 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 59b3fbf9_e09b7812
Bytes: 1135
This looks fine. More in detail:

The IPv6 receive address moved from  ipv6_pinfo to struct sock in October 2013 - https://kernel.googlesource.com/pub/scm/linux/kernel/git/davem/net-next/+/efe4208f47f907b86f528788da711e8ab9dea44d .

The check for inet->pinet6 was mostly intended to (racily) protect against the possibility of a null pointer reference, not as a semantic check - we've already checked the socket family, so we know it's an IPv6 socket.

We only kill the socket if a) the passed-in IPv6 address matches the socket address, or b) if the passed-in IPv6 address is empty and the socket address is not configured on the system any more. So even if sk->sk_v6_rcv_saddr is uninitialized or garbage (which I think would indicated a bug elsewhere), the code will still work.

tcp_is_local6 will return false for an empty address. If the system has a non-loopback route to the address, rt6_lookup will return that, and if it does not, it will return NULL. Even if userspace points a non-local route at a loopback interface, it will be promoted to a reject route at creation time, so rt6_lookup will also return NULL in that case.

File: net/netfilter/xt_quota2.c

55
Fri Apr 04 02:54:57 2014 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 59b3fbf9_c0b834a7
Bytes: 96
You could also set these to GLOBAL_ROOT_UID and GLOBAL_ROOT_GID, if that's what's intended here.

55
Fri Apr 04 03:36:21 2014 +0000
Author: JP Abgrall <1005480@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 59b3fbf9_c0b834a7
UUID: 19c5035d_be135de5
Bytes: 121
This looks closer to what might get upstreamed https://lists.openwrt.org/pipermail/openwrt-devel/2013-January/018351.html

