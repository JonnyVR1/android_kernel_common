Revision: b28912f02a94c8fdb9851b5baf1e851e9ba172d8
Patch-set: 10
File: fs/pstore/inode.c

329
Thu Dec 18 22:37:27 2014 +0000
Author: Arve Hjønnevåg <1000205@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c1eaa0ee_14b7baf7
Bytes: 26
Why is this entry special?

329
Thu Dec 18 23:20:24 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c1eaa0ee_14b7baf7
UUID: 41d1503e_951984eb
Bytes: 198
This is one of the few pstore entities that can contain PII because it can be fed by user space where such content resides and could leak out. This is true in the general case, not just for Android.

329
Fri Dec 19 02:20:27 2014 +0000
Author: Arve Hjønnevåg <1000205@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 41d1503e_951984eb
UUID: 6102d48e_e917b16f
Bytes: 101
User-space has to configure why has access to thins anyway, so I still don't see why this is special.

329
Fri Dec 19 15:40:38 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6102d48e_e917b16f
UUID: 6102d48e_2c8cb75a
Bytes: 805
Frankly _all_ of pstore on Android should start up with 440, but in the general case I can only make a strong case for pmsg. I will move this out and reintroduction into the followon requirement to introduce xattr DAC for all of the pstore nodes; perhaps this is where we need to place this MAC adjustment for _all_. In the context of that adjustment changing security defaults can carry its own debate ;->

In the general sense, trying to bridge worlds, user space does _not_ change any permissions except where there are flaws. I _know_ we do this with our hand-built Android init, policy modules on servers are a different world. The act of changing the security settings on files at run time can be viewed as a security exploit and Drivers are urged to set reasoned default permissions where possible.

File: fs/pstore/ram.c

56
Thu Dec 18 22:37:27 2014 +0000
Author: Arve Hjønnevåg <1000205@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 61d9f46e_f107a2bd
Bytes: 46
You should probably use a different name here.

56
Thu Dec 18 23:20:24 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 61d9f46e_f107a2bd
UUID: e10ec4b4_4a96b359
Bytes: 13
message_size?

56
Fri Dec 19 02:20:27 2014 +0000
Author: Arve Hjønnevåg <1000205@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e10ec4b4_4a96b359
UUID: 01f918d6_4386a6a7
Bytes: 151
no, msg_size and message_size are the same. What does it refer to? If this only affects the new interface, it should not have a generic name like this.

475
Thu Dec 18 22:37:27 2014 +0000
Author: Arve Hjønnevåg <1000205@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 61d9f46e_11034eae
Bytes: 27
don't delete unrelated code

475
Thu Dec 18 23:20:24 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 61d9f46e_11034eae
UUID: 41d1503e_352990f0
Bytes: 27
Will split out individually

