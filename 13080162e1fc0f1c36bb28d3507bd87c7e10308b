Revision: 13080162e1fc0f1c36bb28d3507bd87c7e10308b
Patch-set: 1
File: drivers/net/pppopns.c

127
Tue Apr 19 01:02:26 2011 +0000
Author: JP Abgrall <1005480@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA/n//+MA=
Bytes: 194
The sequence is _u32.
This diff seems iffy around INT32_MAX. E.g.
  meta->sequence = 0xffffffff;
  meta1->sequence = 0x7fffffff;
vs
  meta->sequence = 0x7fffffff;
  meta1->sequence = 0xffffffff;

127
Tue Apr 19 02:13:37 2011 +0000
Author: Chia-chi Yeh <1001923@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA/n//+MA=
UUID: AAAA/n//+L4=
Bytes: 415
This logic is used to determine which packet should go before the other. PPTP uses 32-bit sequences, so sequences will wrap around UINT32_MAX. As a result, we know that 2 should go before 3 and 0xffffffff should go before 0.

Your examples shows two sequences on the opposite sides of 32-bit space. It will not happen due to the check in line 102. Even it happens, there is no way to tell which one should go first.

127
Tue Apr 19 03:57:51 2011 +0000
Author: JP Abgrall <1005480@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA/n//+L4=
UUID: AAAA/n//+Lg=
Bytes: 427
> It will not happen due to the check in line 102. 

Which is also affected.

Maybe just add a comment on 102 saying that it works because in normal operation we'll never see sequence numbers separated by as much as 2^31 within 1sec. Except at 10Mb/s with tons of small  empty packets :)

In the other file the wrap around happens at 5Mb/s in 1sec.

A comment is ok, as after 1sec the mishandled packet will be considered lost.

