Revision: a98c0f4a7ffcf0801a87427976b1f10f54ec0ebb
Patch-set: 6
File: drivers/net/wireless/bcmdhd/wl_cfg80211.c

11447:0-11453:2
Fri Sep 04 00:35:07 2015 +0000
Author: Dmitry Torokhov <1076784@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44141a88_13139668
Bytes: 200
No, please use locking here always. The user in thins file that previously called wl_update_wiphybands() with cfg != NULL (and thus did not use locking) should be calling __wl_update_wiphybands() now.

11447:0-11453:2
Fri Sep 04 01:36:18 2015 +0000
Author: Insun Song <1072843@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44141a88_13139668
UUID: 44141a88_133276bf
Bytes: 424
Once I tried to set locking always, but it failed to power up WiFi. because failed getting usr_sync lock. 

In the original code, it reassign cfg pointer to global one if passed value was NULL. and set mutex for some reason. 

	if (cfg == NULL) {
		cfg = g_bcm_cfg;
		mutex_lock(&cfg->usr_sync);
		rollback_lock = true;
	}

I think we can skip to call __wl_update_wiphybands when cfg==NULL, then setting mutex is not needed.

11447:0-11453:2
Fri Sep 04 05:08:41 2015 +0000
Author: Dmitry Torokhov <1076784@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44141a88_133276bf
UUID: 44141a88_7ed0d131
Bytes: 268
If you did that without adjusting caller in this file to use non-locking version then it is not a surprise: you'd try to take this mutex recursively and woudl deadlock.

I am not sure about dropping call to __wl_update_wiphybands(), I'd rather did it in a separate CL.

11447:0-11453:2
Fri Sep 04 05:42:31 2015 +0000
Author: Insun Song <1072843@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44141a88_7ed0d131
UUID: 44141a88_fefa01aa
Bytes: 171
Yes, your saying correct. If in case cfg==NULL passing, then there's nothing that we can do update through wiphybands. I think tt's better to see with further test result.

11447:0-11453:2
Fri Sep 04 06:46:02 2015 +0000
Author: Dmitry Torokhov <1076784@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44141a88_fefa01aa
UUID: 240f267a_374b20a1
Bytes: 234
But we never pass cfg==NULL to wl_update_wiphybands() anymore. Please restore locking, I assume it was there on purpose. If locking is not needed please submit a separate CL describing why it is not needed, as a followup for this one.

11447:0-11453:2
Fri Sep 04 17:27:20 2015 +0000
Author: Insun Song <1072843@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 240f267a_374b20a1
UUID: e486eed4_a3fdb0aa
Bytes: 235
@Dmitry Torokhov
If we want to set mutex here, usr_sync is not appropriate. usr_sync is normally used for user action for scan. I'm trying to find existing another one for use, but I think we should create new one if definitely needed.

11447:0-11453:2
Fri Sep 04 17:50:20 2015 +0000
Author: Dmitry Torokhov <1076784@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e486eed4_a3fdb0aa
UUID: 04cce27b_e9428674
Bytes: 572
We *were* using usr_sync mutex here. If it is not needed/incorrect, please remove it in a separate CL, with explanation why it is not needed and why it is safe to remove it. Or change it for a different mutex if you think that usr_sync is not the rightmutex to use. Again, in a different CL, with detailed explanation.

Moreover, looking at the driver wl_update_wiphybands() is called from dhd_bus_country_set() and dhd_bus_band_set() and I do not see anything that would prevent these 2 from being called simultaneously from different threads. So a mutex is needed there.

11447:0-11453:2
Fri Sep 04 18:25:56 2015 +0000
Author: Dmitry Shmidt <1000414@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04cce27b_e9428674
UUID: 6492fe15_900ebd3e
Bytes: 119
@Dmitry, but locking used only in case of cfg == NULL, and now we are not calling __wl_update_wiphybands() in this case

11447:0-11453:2
Fri Sep 04 18:59:37 2015 +0000
Author: Insun Song <1072843@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6492fe15_900ebd3e
UUID: e486eed4_e37e58ef
Bytes: 70
Yes, agreed to Dmtiry Shmidt. Mutex was used only when cfg==NULL case.

11447:0-11453:2
Fri Sep 04 19:03:36 2015 +0000
Author: Dmitry Torokhov <1076784@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6492fe15_900ebd3e
UUID: 44141a88_b9bc2342
Bytes: 1105
@Dmitry Shmidt:

We are not calling wl_update_wiphybands() with NULL cfg anymore, that was the whole point of this change - to always supply valid cfg pointer instead of relying on the global one.

The old locking logic was: if wl_update_wiphybands() is called with cfg == NULL assume external caller and lock the usr_sync mutex and do the work. If cfg != NULL assume internal caller and assume that mutex is already taken.

@Insun: What I am asking is splitting wl_update_wiphybands() into 2: __wl_update_wiphybands() that does the work itself and does not do any locking. It should be used by the internal to wl_cfg80211.c callers (__wl_cfg80211_up) that have already taken usr_sync mutex.

wl_update_wiphybands() should unconditionally take the lock and call __wl_update_wiphybands() to perform the work:

s32 wl_update_wiphybands(struct bcm_cfg80211 *cfg, bool notify)
{
    s32 err;

    mutex_lock(&cfg->usr_sync);
    err = __wl_update_wiphybands(cfg, notify);
    mutex_unlock(&cfg->usr_sync);

    return err;
}

The "non underscore" function should be used by external callers.

Hope this helps.

11447:0-11453:2
Fri Sep 04 22:09:22 2015 +0000
Author: Insun Song <1072843@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44141a88_b9bc2342
UUID: 8497f201_497404c8
Bytes: 122
@Dmitry Torokhov. 
Thanks for plentiful explain. I just added new mutex wiphy_sync for this purpose. I tested it works OK.

File: drivers/net/wireless/bcmdhd/wl_cfg80211.h

914
Fri Sep 04 00:35:07 2015 +0000
Author: Dmitry Torokhov <1076784@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84529221_51481526
Bytes: 43
I do not think you need to export this one.

914
Fri Sep 04 01:36:18 2015 +0000
Author: Insun Song <1072843@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84529221_51481526
UUID: 6492fe15_15185faf
Bytes: 18
Yes agreed. Fixed.

914
Fri Sep 04 05:11:44 2015 +0000
Author: Dmitry Torokhov <1076784@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6492fe15_15185faf
UUID: 84529221_b41cd700
Bytes: 112
No it is not. You still have __wl_update_wiphybands() as a global function. It should be static to wl_cfg80211.c

914
Fri Sep 04 05:42:31 2015 +0000
Author: Insun Song <1072843@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84529221_b41cd700
UUID: 644d9e85_b8c3b8be
Bytes: 25
Oh..Ok. moved to .c file.

