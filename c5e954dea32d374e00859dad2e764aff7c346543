Revision: c5e954dea32d374e00859dad2e764aff7c346543
Patch-set: 16
File: security/selinux/avc.c

408
Thu Mar 26 13:01:14 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 038e8eef_20da0a9f
Bytes: 171
Should be !avc_operation_has_perm(), same as for auditallow.
auditdeny is the set of permissions that should be audited when denied, the complement of any dontaudit rules.

File: security/selinux/hooks.c

3112
Thu Mar 26 13:01:14 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 038e8eef_c0355e57
Bytes: 16
typo: permission

3113
Thu Mar 26 13:01:14 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2339d2d0_ebaccd1a
Bytes: 16
missing word: to

File: security/selinux/ss/conditional.c

633
Thu Mar 26 13:01:14 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4336c6df_ecb067d1
Bytes: 195
We want to call it for any AVTAB_OP value, right?  And in fact, we don't need this test at all since the key already specifies AVTAB_OP specifier only.  Should only need to test for ENABLED here.

File: security/selinux/ss/services.c

629
Thu Mar 26 13:01:14 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 038e8eef_e0c3c2b5
Bytes: 42
Or if allowing one or more complete types.

632
Thu Mar 26 13:01:14 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2339d2d0_cb9229d3
Bytes: 60
Normally I would put this comment within the else { } below.

941
Thu Mar 26 13:01:14 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 038e8eef_00c106ad
Bytes: 45
else if... since they are mutually exclusive?

944
Thu Mar 26 13:01:14 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2339d2d0_ab8fe5a6
Bytes: 19
else return or BUG.

966
Thu Mar 26 17:49:27 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2370f2c2_39cfaf5d
Bytes: 182
For auditdeny, you want different behavior - &= instead of |= as in compute_av.  You are clearing bits not set in the entry in order to suppress denials silenced via dontaudit rules.

966
Thu Mar 26 21:35:35 2015 +0000
Author: Jeffrey Vander Stoep <1054468@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2370f2c2_39cfaf5d
UUID: 43d246e8_bb12bb08
Bytes: 813
I account for this in the avc_operation_audit_required code.

I considered doing it the other way (following precedence in the av_decision) but decided against it primarily for simplicity. Unlike AV permissions, only one ioctl command permission will be requested at a time, whether that bit is set or unset for auditdeny doesn't particularly matter because the auditdeny operation permission is not used directly to modify the av_decision (i.e. they are not bitwise & or | together), the permission is checked, and based on that decision audited may be modified.

audited = denied & avd->auditdeny;
if (audited && od && avc_operation_has_perm(od->auditdeny, cmd))
	audited &= ~requested;

Leaving the operation_decision->auditdeny structure the same as the others simplifies code here and in the policy compiler.

966
Fri Mar 27 12:14:50 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 43d246e8_bb12bb08
UUID: 43308612_c22e628a
Bytes: 998
In that case, please rename auditdeny to dontaudit or something to make it clear that you are using it in the reverse sense of the avd auditdeny vector.  As a historical note, originally the policy rules were auditdeny rules, but because the default was to audit all denials, people would write them using permission set complements, e.g.
auditdeny a b:c ~{ read write };  This became ambiguous when we allowed multiple allow rules to affect the same (domain, type, class) triple, e.g. if I have auditdeny a b:c ~{ read write }; and auditdeny a b:c ~ioctl;.  So then we introduced dontaudit rules in the policy to make it clear that you are disabling auditing of denials, but complement them internally and keep the internal representation as auditdeny vectors.  You seem to be using your auditdeny vectors in the same way as dontaudit rules, so just call them that.  The language still supports use of auditdeny rules but I don't think anyone is using them anymore; they all migrated to dontaudit.

987
Thu Mar 26 17:49:27 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2370f2c2_391a4f6e
Bytes: 83
auditdeny should be initialized to all-bits-set, i.e. audit all denials by default.

